% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ClusterCells.R
\name{ClusterCells}
\alias{ClusterCells}
\title{Iteratively recluster cells.}
\usage{
ClusterCells(
  seurat.object = NULL,
  n.variable.genes = 3000,
  initial.resolution = 0.5,
  random.seed = 629
)
}
\arguments{
\item{seurat.object}{The object containing the cells you'd like to analyze.}

\item{n.variable.genes}{The number of variable genes to find at each step. Defaults to 3000.}

\item{initial.resolution}{The initial resolution parameter used in the \code{FindClusters} function. Defaults to 0.5.}

\item{random.seed}{The seed used to control stochasticity in several functions. Defaults to 629.}

\item{run.SingleR}{Should cell type identification through \code{SingleR} be run? Defaults to TRUE.}

\item{ref.data}{(Optional) A user-defined reference dataset to be used with \code{SingleR}. If NULL, the Human Primary Cell Atlas dataset will be used. Defaults to NULL.}

\item{recluster.res}{How many times should each cluster be divided? Defaults to 1.}

\item{...}{Optional parameter passed to other functions. Default is NULL.}
}
\description{
This function prepares a \code{Seurat} object for iterative reclustering. The input is a \code{Seurat} object in any stage of pre-processing, or even a \code{SingleCellExperiment} object that will be converted to \code{Seurat} format. The function checks which metadata features and assays are present (\% mitochondrial DNA, normalized counts, PCA & t-SNE embeddings), then runs an initial graph-based clustering. Next, it calls \code{SingleR}, then iteratively reclusters the cell types in order to reveal subtypes and rare cell populations.
}
\examples{
ClusterCells(seurat.object = pbmc, n.variable.genes = 5000, initial.resolution = .75, ref.data = cell_ref)
ClusterCells(seurat.object = baron_pancreas, initial.resolution = .5, perform.SingleR = TRUE, species = "mouse")
}
\references{
Stuart \emph{et al} (2019). Comprehensive integration of single-cell data. \emph{Cell}.
}
